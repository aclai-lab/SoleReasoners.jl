(declare-sort A)
(declare-const a1 A)
(declare-const a2 A)
(declare-const a3 A)
(declare-const a4 A)
(assert (distinct a1 a2 a3 a4))
(declare-fun join (A A) A)
(declare-fun meet (A A) A)
(declare-fun monoid (A A) A)
(declare-fun implication (A A) A)
(assert (= (join a1 a1) a1))
(assert (= (meet a1 a1) a1))
(assert (= (monoid a1 a1) a1))
(assert (= (implication a1 a1) a4))
(assert (= (join a1 a2) a2))
(assert (= (meet a1 a2) a1))
(assert (= (monoid a1 a2) a1))
(assert (= (implication a1 a2) a4))
(assert (= (join a1 a3) a3))
(assert (= (meet a1 a3) a1))
(assert (= (monoid a1 a3) a1))
(assert (= (implication a1 a3) a4))
(assert (= (join a1 a4) a4))
(assert (= (meet a1 a4) a1))
(assert (= (monoid a1 a4) a1))
(assert (= (implication a1 a4) a4))
(assert (= (join a2 a1) a2))
(assert (= (meet a2 a1) a1))
(assert (= (monoid a2 a1) a1))
(assert (= (implication a2 a1) a3))
(assert (= (join a2 a2) a2))
(assert (= (meet a2 a2) a2))
(assert (= (monoid a2 a2) a2))
(assert (= (implication a2 a2) a4))
(assert (= (join a2 a3) a4))
(assert (= (meet a2 a3) a1))
(assert (= (monoid a2 a3) a1))
(assert (= (implication a2 a3) a3))
(assert (= (join a2 a4) a4))
(assert (= (meet a2 a4) a2))
(assert (= (monoid a2 a4) a2))
(assert (= (implication a2 a4) a4))
(assert (= (join a3 a1) a3))
(assert (= (meet a3 a1) a1))
(assert (= (monoid a3 a1) a1))
(assert (= (implication a3 a1) a2))
(assert (= (join a3 a2) a4))
(assert (= (meet a3 a2) a1))
(assert (= (monoid a3 a2) a1))
(assert (= (implication a3 a2) a2))
(assert (= (join a3 a3) a3))
(assert (= (meet a3 a3) a3))
(assert (= (monoid a3 a3) a3))
(assert (= (implication a3 a3) a4))
(assert (= (join a3 a4) a4))
(assert (= (meet a3 a4) a3))
(assert (= (monoid a3 a4) a3))
(assert (= (implication a3 a4) a4))
(assert (= (join a4 a1) a4))
(assert (= (meet a4 a1) a1))
(assert (= (monoid a4 a1) a1))
(assert (= (implication a4 a1) a1))
(assert (= (join a4 a2) a4))
(assert (= (meet a4 a2) a2))
(assert (= (monoid a4 a2) a2))
(assert (= (implication a4 a2) a2))
(assert (= (join a4 a3) a4))
(assert (= (meet a4 a3) a3))
(assert (= (monoid a4 a3) a3))
(assert (= (implication a4 a3) a3))
(assert (= (join a4 a4) a4))
(assert (= (meet a4 a4) a4))
(assert (= (monoid a4 a4) a4))
(assert (= (implication a4 a4) a4))
(define-fun precedeq ((x A) (y A)) Bool (= (meet x y) x))
(declare-const x1 A)
(declare-const y1 A)
(assert (or (= x1 a1) (= x1 a2) (= x1 a3) (= x1 a4)))
(assert (or (= y1 a1) (= y1 a2) (= y1 a3) (= y1 a4)))
(assert (precedeq a4 (implication x1 y1)))
(check-sat)